{"ast":null,"code":"var _jsxFileName = \"C:\\\\study\\\\fastcampus\\\\security_code\\\\ui-component\\\\case1_context-menu\\\\question\\\\q5_react.js-createportal\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from \"react\";\nimport \"./style.css\";\nimport Detail from \"./Detail\";\nimport dummyData from \"./dummyData\";\nimport ContextPortal from \"./ContextPortal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  var _dummyData$openedInde;\n\n  const [openedIndex, setOpen] = useState(null);\n  const detailRefs = useRef([]);\n\n  const togglePopover = index => e => {\n    e.preventDefault();\n    e.stopPropagation();\n    setOpen(e.target.parentElement.open ? null : index);\n  };\n\n  const closeAll = () => {\n    setOpen(null);\n  };\n\n  useEffect(() => {\n    document.body.addEventListener(\"click\", closeAll);\n    return () => {\n      document.body.removeEventListener(\"click\", closeAll);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: dummyData.map(({\n        text,\n        context\n      }, i) => /*#__PURE__*/_jsxDEV(Detail, {\n        ref: r => detailRefs.current[i] = r,\n        text: text,\n        context: context,\n        open: openedIndex === i,\n        onToggle: togglePopover(i)\n      }, `detail${i}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContextPortal\n    /* 채워 넣으세요. */\n    , {\n      target: detailRefs.current[openedIndex],\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: (_dummyData$openedInde = dummyData[openedIndex]) === null || _dummyData$openedInde === void 0 ? void 0 : _dummyData$openedInde.context\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n/**\r\n * \r\n * <해설>\r\ncreatePortal은 Modal, Popover 등 floating UI를 효과적으로 제어할 수 있는 강력한 도구다. \r\n\r\n */\n\n_s(App, \"y6WPxxfqY9VEaMRWmNcYArQBqIY=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/study/fastcampus/security_code/ui-component/case1_context-menu/question/q5_react.js-createportal/src/App.js"],"names":["React","useRef","useState","useEffect","Detail","dummyData","ContextPortal","App","openedIndex","setOpen","detailRefs","togglePopover","index","e","preventDefault","stopPropagation","target","parentElement","open","closeAll","document","body","addEventListener","removeEventListener","map","text","context","i","r","current"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAO,aAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAAA;;AAC5B,QAAM,CAACC,WAAD,EAAcC,OAAd,IAAyBP,QAAQ,CAAC,IAAD,CAAvC;AACA,QAAMQ,UAAU,GAAGT,MAAM,CAAC,EAAD,CAAzB;;AAEA,QAAMU,aAAa,GAAIC,KAAD,IAAYC,CAAD,IAAO;AACtCA,IAAAA,CAAC,CAACC,cAAF;AACAD,IAAAA,CAAC,CAACE,eAAF;AACAN,IAAAA,OAAO,CAACI,CAAC,CAACG,MAAF,CAASC,aAAT,CAAuBC,IAAvB,GAA8B,IAA9B,GAAqCN,KAAtC,CAAP;AACD,GAJD;;AAMA,QAAMO,QAAQ,GAAG,MAAM;AACrBV,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFD;;AAIAN,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,QAAQ,CAACC,IAAT,CAAcC,gBAAd,CAA+B,OAA/B,EAAwCH,QAAxC;AACA,WAAO,MAAM;AACXC,MAAAA,QAAQ,CAACC,IAAT,CAAcE,mBAAd,CAAkC,OAAlC,EAA2CJ,QAA3C;AACD,KAFD;AAGD,GALQ,EAKN,EALM,CAAT;AAOA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,gBACGd,SAAS,CAACmB,GAAV,CAAc,CAAC;AAAEC,QAAAA,IAAF;AAAQC,QAAAA;AAAR,OAAD,EAAoBC,CAApB,kBACb,QAAC,MAAD;AAEE,QAAA,GAAG,EAAGC,CAAD,IAAQlB,UAAU,CAACmB,OAAX,CAAmBF,CAAnB,IAAwBC,CAFvC;AAGE,QAAA,IAAI,EAAEH,IAHR;AAIE,QAAA,OAAO,EAAEC,OAJX;AAKE,QAAA,IAAI,EAAElB,WAAW,KAAKmB,CALxB;AAME,QAAA,QAAQ,EAAEhB,aAAa,CAACgB,CAAD;AANzB,SACQ,SAAQA,CAAE,EADlB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAcE,QAAC;AAAc;AAAf;AACE,MAAA,MAAM,EAAEjB,UAAU,CAACmB,OAAX,CAAmBrB,WAAnB,CADV;AAEE,MAAA,QAAQ,eAAE;AAAA,2CAAIH,SAAS,CAACG,WAAD,CAAb,0DAAI,sBAAwBkB;AAA5B;AAAA;AAAA;AAAA;AAAA;AAFZ;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA,kBADF;AAqBD;AAED;AACA;AACA;AACA;AACA;AACA;;GAjDwBnB,G;;KAAAA,G","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\r\nimport \"./style.css\";\r\nimport Detail from \"./Detail\";\r\nimport dummyData from \"./dummyData\";\r\nimport ContextPortal from \"./ContextPortal\";\r\n\r\nexport default function App() {\r\n  const [openedIndex, setOpen] = useState(null);\r\n  const detailRefs = useRef([]);\r\n\r\n  const togglePopover = (index) => (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setOpen(e.target.parentElement.open ? null : index);\r\n  };\r\n\r\n  const closeAll = () => {\r\n    setOpen(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.body.addEventListener(\"click\", closeAll);\r\n    return () => {\r\n      document.body.removeEventListener(\"click\", closeAll);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"wrapper\">\r\n        {dummyData.map(({ text, context }, i) => (\r\n          <Detail\r\n            key={`detail${i}`}\r\n            ref={(r) => (detailRefs.current[i] = r)}\r\n            text={text}\r\n            context={context}\r\n            open={openedIndex === i}\r\n            onToggle={togglePopover(i)}\r\n          />\r\n        ))}\r\n      </div>\r\n\r\n      <ContextPortal /* 채워 넣으세요. */\r\n        target={detailRefs.current[openedIndex]}\r\n        children={<p>{dummyData[openedIndex]?.context}</p>}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\n/**\r\n * \r\n * <해설>\r\ncreatePortal은 Modal, Popover 등 floating UI를 효과적으로 제어할 수 있는 강력한 도구다. \r\n\r\n */\r\n"]},"metadata":{},"sourceType":"module"}